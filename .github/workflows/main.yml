name: Build OpenWrt IPK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: x86_64
            sdk_url: https://downloads.openwrt.org/releases/24.10.0/targets/x86/64/openwrt-sdk-24.10.0-x86-64_gcc-13.3.0_musl.Linux-x86_64.tar.zst
            sdk_dir: openwrt-sdk-24.10.0-x86-64_gcc-13.3.0_musl.Linux-x86_64
          - name: bcm27xx_bcm2710
            sdk_url: https://downloads.openwrt.org/releases/24.10.0/targets/bcm27xx/bcm2710/openwrt-sdk-24.10.0-bcm27xx-bcm2710_gcc-13.3.0_musl.Linux-x86_64.tar.zst
            sdk_dir: openwrt-sdk-24.10.0-bcm27xx-bcm2710_gcc-13.3.0_musl.Linux-x86_64
          - name: ipq40xx_generic
            sdk_url: https://downloads.openwrt.org/releases/24.10.0/targets/ipq40xx/generic/openwrt-sdk-24.10.0-ipq40xx-generic_gcc-13.3.0_musl_eabi.Linux-x86_64.tar.zst
            sdk_dir: openwrt-sdk-24.10.0-ipq40xx-generic_gcc-13.3.0_musl_eabi.Linux-x86_64
          - name: ipq806x_generic
            sdk_url: https://downloads.openwrt.org/releases/24.10.0/targets/ipq806x/generic/openwrt-sdk-24.10.0-ipq806x-generic_gcc-13.3.0_musl_eabi.Linux-x86_64.tar.zst
            sdk_dir: openwrt-sdk-24.10.0-ipq806x-generic_gcc-13.3.0_musl_eabi.Linux-x86_64
          - name: mediatek_filogic
            sdk_url: https://downloads.openwrt.org/releases/24.10.0/targets/mediatek/filogic/openwrt-sdk-24.10.0-mediatek-filogic_gcc-13.3.0_musl.Linux-x86_64.tar.zst
            sdk_dir: openwrt-sdk-24.10.0-mediatek-filogic_gcc-13.3.0_musl.Linux-x86_64
          - name: rockchip_armv8
            sdk_url: https://downloads.openwrt.org/releases/24.10.0/targets/rockchip/armv8/openwrt-sdk-24.10.0-rockchip-armv8_gcc-13.3.0_musl.Linux-x86_64.tar.zst
            sdk_dir: openwrt-sdk-24.10.0-rockchip-armv8_gcc-13.3.0_musl.Linux-x86_64
          - name: ramips_mt76x8
            sdk_url: https://downloads.openwrt.org/releases/24.10.0/targets/ramips/mt76x8/openwrt-sdk-24.10.0-ramips-mt76x8_gcc-13.3.0_musl.Linux-x86_64.tar.zst
            sdk_dir: openwrt-sdk-24.10.0-ramips-mt76x8_gcc-13.3.0_musl.Linux-x86_64
          - name: ramips_mt7621
            sdk_url: https://downloads.openwrt.org/releases/24.10.0/targets/ramips/mt7621/openwrt-sdk-24.10.0-ramips-mt7621_gcc-13.3.0_musl.Linux-x86_64.tar.zst
            sdk_dir: openwrt-sdk-24.10.0-ramips-mt7621_gcc-13.3.0_musl.Linux-x86_64
          - name: ath79_generic
            sdk_url: https://mirror-03.infra.openwrt.org/releases/24.10.0/targets/ath79/generic/openwrt-sdk-24.10.0-ath79-generic_gcc-13.3.0_musl.Linux-x86_64.tar.zst
            sdk_dir: openwrt-sdk-24.10.0-ath79-generic_gcc-13.3.0_musl.Linux-x86_64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang flex bison g++ gawk gcc-multilib git gettext libncurses-dev libssl-dev rsync unzip zlib1g-dev file wget python3

      - name: Download and extract SDK
        run: |
          wget ${{ matrix.sdk_url }} -O sdk.tar.zst
          tar --use-compress-program=unzstd -xf sdk.tar.zst

      - name: Prepare package directory
        run: |
          mkdir -p ${{ matrix.sdk_dir }}/package/cloud-control
          mkdir -p ${{ matrix.sdk_dir }}/package/luci-app-cloud-control
          rsync -a ./cloud-control/ ${{ matrix.sdk_dir }}/package/cloud-control/
          rsync -a ./luci-app-cloud-control/ ${{ matrix.sdk_dir }}/package/luci-app-cloud-control/

      # Feeds update/install, ignore error if no feeds
      - name: Update & install feeds
        run: |
          cd ${{ matrix.sdk_dir }}
          if [ -f scripts/feeds ]; then ./scripts/feeds update -a || true; ./scripts/feeds install -a || true; fi

      - name: Select package in .config
        run: |
          cd ${{ matrix.sdk_dir }}
          echo "CONFIG_PACKAGE_luci-app-cloud-control=y" >> .config
          echo "CONFIG_PACKAGE_cloud-control=y" >> .config

      - name: Build package
        run: |
          cd ${{ matrix.sdk_dir }}
          make package/luci-app-cloud-control/compile V=s
          make package/cloud-control/compile V=s

      - name: Collect ipk
        run: |
          mkdir -p ipk
          find ${{ matrix.sdk_dir }}/bin/ -name "*.ipk" -exec cp {} ipk/ \;

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: luci-app-cloud-control-ipk-${{ matrix.name }}
          path: ipk/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Publish Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/luci-app-cloud-control-ipk-*/**/*.ipk
